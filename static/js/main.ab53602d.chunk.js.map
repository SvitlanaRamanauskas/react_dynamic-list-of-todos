{"version":3,"sources":["components/TodoFilter/TodoFilter.tsx","components/TodoList/TodoList.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Status","TodoList","todos","selectedTodoId","onSelect","className","map","todo","id","completed","title","type","onClick","TodoFilter","selectedStatus","onStatusChange","query","onQueryChange","value","onChange","e","status","target","all","active","name","placeholder","event","newQuery","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","modalLoading","setModalLoading","user","setUser","modalVisible","setModalVisible","useEffect","userId","finally","href","email","App","setTodos","loading","setLoading","selectedTodo","setSelectedTodo","setSelectedStatus","setQuery","visibleTodos","currentTodos","preparedTodos","filter","toLowerCase","includes","getPreparedTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ab53602d.chunk.js","sourcesContent":["export enum Status {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n\ntype Props = {\n  selectedStatus: Status,\n  onStatusChange: (status: Status) => void\n  query: string,\n  onQueryChange: (query: string) => void\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  selectedStatus,\n  onStatusChange,\n  query,\n  onQueryChange,\n}) => {\n  const handleStatusClick = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const status = e.target.value as Status;\n\n    onStatusChange(status);\n  };\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newQuery = event.target.value;\n\n    onQueryChange(newQuery);\n  };\n\n  const handleDeleteQuery = () => {\n    onQueryChange('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectedStatus}\n            onChange={handleStatusClick}\n          >\n            <option\n              value={Status.all}\n            >\n              All\n            </option>\n            <option\n              value={Status.active}\n            >\n              Active\n            </option>\n            <option\n              value={Status.completed}\n            >\n              Completed\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          id=\"searchInput\" // Add an id attribute\n          name=\"searchInput\"\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleQueryChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleDeleteQuery}\n            />\n          </span>\n        )}\n\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodoId?: number,\n  onSelect: (todo: Todo | null) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodoId,\n  onSelect = () => {},\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          data-cy=\"todo\"\n          className={`${selectedTodoId === todo.id && ('has-background-info-light')}`}\n          key={todo.id}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className={`${todo.completed ? 'has-text-success' : 'has-text-danger'}`}>\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n\n            {selectedTodoId === todo.id ? (\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onSelect(null)}\n              >\n                <span className=\"icon\">\n                  <i className=\"far fa-eye-slash\" />\n                </span>\n              </button>\n            ) : (\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onSelect(todo)}\n              >\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            )}\n\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todo?: Todo | null,\n  onSelect: (todo: Todo | null) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, onSelect = () => {} }) => {\n  const [modalLoading, setModalLoading] = useState(false);\n  const [user, setUser] = useState<User | null>(null);\n  const [modalVisible, setModalVisible] = useState(true);\n\n  const handleCloseModal = () => {\n    setModalVisible(false);\n    onSelect(null);\n  };\n\n  useEffect(() => {\n    if (todo) {\n      setModalLoading(true);\n      getUser(todo.userId)\n        .then(setUser)\n        .finally(() => setModalLoading(false));\n    }\n  }, [todo]);\n\n  if (!modalVisible) {\n    return null;\n  }\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {modalLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleCloseModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { Status, TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\ninterface FilterParams {\n  selectedStatus: Status,\n  query: string,\n}\n\nconst getPreparedTodos = (currentTodos: Todo[], { selectedStatus, query }: FilterParams) => {\n  let preparedTodos = [...currentTodos];\n\n  if (selectedStatus) {\n    preparedTodos = preparedTodos.filter(todo => {\n      switch (selectedStatus) {\n        case Status.active:\n          return !todo.completed;\n        case Status.completed:\n          return todo.completed;\n        default:\n          return true;\n      }\n    });\n  }\n\n  if (query) {\n    preparedTodos = preparedTodos.filter(todo => todo.title.toLowerCase().includes(query.toLowerCase()));\n  }\n\n  return preparedTodos;\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  const [selectedStatus, setSelectedStatus] = useState(Status.all);\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    setLoading(true);\n\n    getTodos()\n      .then(setTodos)\n      .finally(() => setLoading(false));\n  }, []);\n\n  const handleStatusChange = (status: Status) => {\n    setSelectedStatus(status);\n  };\n\n  const handleQueryChange = (newQuery: string) => {\n    setQuery(newQuery);\n  };\n\n  const visibleTodos = getPreparedTodos(todos, { selectedStatus, query });\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                selectedStatus={selectedStatus}\n                onStatusChange={handleStatusChange}\n                query={query}\n                onQueryChange={handleQueryChange}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading && (<Loader />)}\n\n              {!loading && (\n                <TodoList\n                  todos={visibleTodos}\n                  selectedTodoId={selectedTodo?.id}\n                  onSelect={setSelectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodo && (\n        <TodoModal todo={selectedTodo} onSelect={setSelectedTodo} />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}